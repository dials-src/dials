import pytest

from dxtbx.serialize import load

from dials.algorithms.profile_model.ellipsoid.algorithm import initial_integrator
from dials.algorithms.profile_model.ellipsoid.indexer import reindex
from dials.algorithms.profile_model.ellipsoid.refiner import RefinerData
from dials.array_family import flex


def test_initial_integrator(dials_data):
    ssx = dials_data("cunir_serial_processed", pathlib=True)
    _ = dials_data("cunir_serial", pathlib=True)
    refls = flex.reflection_table.from_file(str(ssx / "indexed.refl"))
    expts = load.experiment_list(str(ssx / "indexed.expt"))[0:1]
    refls = refls.select_on_experiment_identifiers([expts[0].identifier])

    refls = reindex(refls, expts[0])
    refls, sigma_d = initial_integrator(expts, refls)
    assert sigma_d == pytest.approx(0.00062, abs=1e-5)
    assert list(refls["intensity.sum.value"]) == pytest.approx(
        [20.51, 183.67, 132.11, 103.50, 150.80, 418.075, 412.45, 524.93, 138.86]
        + [161.51, 77.45, 218.50, 109.02, 375.47, 64.86, 81.46, 136.36, 391.07]
        + [107.60, 408.10, 348.73, 143.41, 115.20, 72.93],
        abs=1e-2,
    )

    data = RefinerData.from_reflections(expts[0], refls)

    assert list(data.s0) == pytest.approx([0.0, 0.0, -0.72669], abs=1e-5)
    assert list(data.h_list) == (
        [(-11, 16, 30), (-19, 6, 18), (-18, 6, 17), (-26, -11, 6), (-19, -15, -2)]
        + [(-13, -8, -1), (-7, -15, -8), (3, 3, 2), (-4, -17, -10), (4, -5, -5)]
        + [(-3, -21, -12), (8, -7, -7), (5, -19, -13), (20, 7, 5), (15, -1, -3)]
        + [(12, -8, -8), (16, -1, -3), (21, 6, 4), (25, 8, 7), (18, -8, -8)]
        + [(27, 3, 2), (21, -10, -9), (33, 5, 6), (30, 0, 0)]
    )
    assert list(data.ctot_list) == pytest.approx(
        [91.912, 211.155, 189.053, 164.854, 179.438, 466.371, 450.249, 584.141]
        + [172.747, 208.006, 126.703, 255.102, 157.813, 426.994, 124.453, 130.475]
        + [167.967, 455.962, 155.182, 463.591, 387.441, 196.885, 153.05, 138.08],
        abs=1e-3,
    )
    assert list(refls[0]["xyzobs.px.value"]) == pytest.approx(
        [1821.759426, 713.703654, 0.5], abs=1e-6
    )
    assert list(refls[0]["shoebox"].data) == [
        9.0,
        8.0,
        6.0,
        13.0,
        10.0,
        11.0,
        11.0,
        6.0,
        7.0,
        8.0,
        7.0,
        7.0,
        9.0,
        14.0,
        6.0,
        8.0,
        10.0,
        5.0,
        10.0,
        9.0,
        9.0,
        8.0,
        10.0,
        11.0,
        7.0,
        8.0,
        10.0,
        7.0,
        13.0,
        6.0,
        9.0,
        14.0,
        9.0,
        7.0,
        10.0,
        10.0,
        7.0,
        9.0,
        8.0,
        5.0,
        6.0,
        8.0,
        9.0,
        10.0,
        10.0,
        9.0,
        11.0,
        8.0,
        8.0,
        5.0,
        11.0,
        14.0,
        6.0,
        16.0,
        7.0,
        12.0,
        7.0,
        9.0,
        6.0,
        13.0,
        6.0,
        9.0,
        8.0,
        8.0,
        9.0,
        2.0,
        12.0,
        10.0,
        4.0,
        8.0,
        11.0,
        7.0,
        13.0,
        8.0,
        7.0,
        11.0,
        6.0,
        10.0,
        8.0,
        11.0,
        12.0,
        9.0,
        5.0,
        6.0,
        8.0,
        9.0,
        4.0,
        10.0,
        12.0,
        7.0,
        8.0,
        9.0,
        18.0,
        12.0,
        6.0,
        7.0,
        9.0,
        5.0,
        9.0,
        4.0,
        8.0,
        5.0,
        13.0,
        9.0,
        8.0,
        7.0,
        8.0,
        12.0,
        11.0,
        14.0,
        8.0,
        9.0,
        9.0,
        9.0,
        10.0,
        13.0,
        12.0,
        14.0,
        16.0,
        12.0,
        9.0,
        3.0,
        5.0,
        10.0,
        11.0,
        8.0,
        7.0,
        10.0,
        4.0,
        11.0,
        6.0,
        7.0,
        9.0,
        8.0,
        9.0,
        10.0,
        7.0,
        5.0,
        7.0,
        8.0,
        8.0,
        11.0,
        10.0,
        5.0,
        5.0,
        11.0,
        13.0,
        6.0,
        6.0,
        4.0,
        7.0,
        6.0,
        9.0,
        5.0,
        12.0,
        9.0,
        13.0,
        15.0,
        5.0,
        8.0,
        9.0,
        9.0,
        6.0,
        12.0,
        5.0,
        8.0,
        6.0,
        9.0,
        9.0,
        6.0,
        11.0,
        14.0,
        7.0,
        10.0,
        4.0,
        8.0,
        7.0,
        10.0,
        6.0,
        14.0,
        34.0,
        12.0,
        16.0,
        10.0,
        10.0,
        2.0,
        9.0,
        9.0,
        16.0,
        8.0,
        11.0,
        9.0,
        8.0,
        6.0,
        11.0,
        9.0,
        6.0,
        10.0,
        10.0,
        31.0,
        7.0,
        14.0,
        7.0,
        10.0,
        15.0,
        10.0,
        2.0,
        8.0,
        16.0,
        6.0,
        4.0,
        10.0,
        15.0,
        8.0,
        8.0,
        4.0,
        7.0,
        5.0,
        4.0,
        8.0,
        7.0,
        6.0,
        13.0,
        8.0,
        8.0,
        9.0,
        8.0,
        8.0,
        14.0,
        6.0,
        4.0,
        10.0,
        8.0,
        7.0,
        8.0,
        13.0,
        5.0,
        7.0,
        5.0,
        9.0,
        6.0,
        4.0,
        11.0,
        8.0,
        8.0,
        10.0,
        14.0,
        10.0,
        5.0,
        9.0,
        4.0,
        8.0,
        9.0,
        4.0,
        9.0,
        6.0,
        7.0,
        4.0,
        9.0,
        9.0,
        8.0,
        9.0,
        10.0,
        8.0,
        7.0,
        6.0,
        8.0,
        5.0,
        9.0,
        6.0,
        5.0,
        4.0,
        6.0,
        10.0,
        13.0,
        10.0,
        10.0,
        11.0,
        10.0,
        8.0,
        5.0,
        12.0,
        8.0,
        10.0,
        11.0,
        9.0,
        11.0,
        4.0,
        16.0,
        6.0,
        9.0,
        10.0,
        9.0,
        5.0,
        4.0,
        13.0,
        6.0,
        14.0,
        10.0,
        9.0,
        9.0,
        14.0,
        14.0,
        8.0,
        8.0,
        10.0,
        12.0,
        9.0,
        7.0,
        8.0,
        7.0,
        9.0,
        11.0,
        7.0,
        13.0,
        12.0,
        8.0,
        5.0,
        7.0,
        4.0,
        8.0,
        18.0,
        12.0,
        7.0,
        4.0,
        9.0,
        9.0,
        14.0,
        8.0,
        10.0,
        6.0,
        14.0,
        16.0,
        7.0,
        10.0,
        10.0,
        7.0,
        12.0,
        8.0,
        10.0,
        8.0,
        7.0,
        9.0,
        5.0,
        6.0,
        11.0,
        7.0,
        7.0,
        11.0,
        7.0,
        8.0,
        10.0,
        7.0,
        11.0,
        11.0,
        6.0,
        6.0,
        6.0,
        11.0,
        10.0,
        5.0,
        12.0,
        14.0,
        13.0,
        10.0,
        7.0,
        7.0,
        9.0,
        5.0,
        6.0,
        6.0,
        9.0,
        10.0,
        8.0,
        8.0,
        5.0,
        3.0,
        6.0,
        8.0,
        11.0,
    ]
    assert list(refls[0]["shoebox"].mask) == [
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        5,
        5,
        5,
        5,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        5,
        5,
        5,
        5,
        5,
        5,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        5,
        5,
        5,
        13,
        5,
        5,
        5,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        5,
        5,
        5,
        13,
        5,
        5,
        5,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        5,
        5,
        5,
        5,
        5,
        5,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        5,
        5,
        5,
        5,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
    ]
    assert list(refls[0]["shoebox"].background) == pytest.approx(
        [8.718464] * len(refls[0]["shoebox"].background), abs=1e-6
    )

    panel = expts[0].detector[0]
    xyz = refls[0]["xyzobs.px.value"]
    from scitbx import matrix

    from dials.algorithms.profile_model.ellipsoid.model import (
        compute_change_of_basis_operation,
    )

    s0 = matrix.col(expts[0].beam.get_s0())
    sp = matrix.col(panel.get_pixel_lab_coord(xyz[0:2])).normalize() * s0.length()
    assert list(s0) == pytest.approx([0.0, 0.0, -0.726686], abs=1e-6)
    assert list(sp) == pytest.approx([0.243113, 0.263662, -0.632022], abs=1e-6)

    R = compute_change_of_basis_operation(s0, sp).as_numpy_array()
    result = [
        [-0.7351743459029888, 0.6778780724629707, 0.0],
        [0.5895717265512668, 0.639404084654029, 0.4935256789459915],
        [0.3345502359548876, 0.36282741820544767, -0.8697312252764633],
    ]
    for i in range(3):
        assert list(R[i, :]) == pytest.approx(result[i], abs=1e-6)
    i0 = refls[0]["shoebox"].bbox[0]
    j0 = refls[0]["shoebox"].bbox[2]
    assert i0 == 1812
    assert j0 == 704

    expected_mobs = [
        (2.0816832702053034e-08, -2.523275668409042e-07),
        (-1.496848756055158e-09, -2.6817795628630847e-07),
        (1.8533782508711738e-08, -8.414034624593114e-08),
        (-1.7511684546889228e-08, -2.0514616494438087e-07),
        (5.942813530168678e-08, -1.7264262908156525e-07),
        (-4.804299180705129e-09, -1.878704125601871e-08),
        (3.821995164798864e-09, -4.415533183532716e-08),
        (-5.213507403567519e-10, -7.761668641137476e-09),
        (-4.733525571509745e-09, -8.223894099046447e-08),
        (4.271423215129744e-09, -6.254008866335425e-08),
        (-4.6307797596512046e-09, -8.324193601083607e-08),
        (1.1987575376792847e-08, -2.996608472471962e-08),
        (1.2904942892077997e-08, -1.365147426213298e-07),
        (1.4406265069766278e-09, -7.468574381164217e-08),
        (2.112772179430067e-08, -1.1442915592851932e-07),
        (3.292555561529298e-08, -8.43678336082121e-08),
        (-1.8321815176136624e-08, -6.101929272972484e-08),
        (-1.922441938972952e-08, -3.087865962925207e-08),
        (-3.93097288053923e-09, -1.6301835614740412e-07),
        (5.863569074726627e-10, -2.2559799361943078e-08),
        (-4.634125261304689e-08, -1.0683716311632452e-07),
        (-2.1413431028349805e-09, -9.075061058183564e-08),
        (2.750833338893699e-08, -2.4447845703434723e-07),
        (-5.737366848279635e-08, -1.687713790943235e-07),
    ]

    for i in range(len(expected_mobs)):
        assert data.mobs_list[i] == pytest.approx(expected_mobs[i], abs=1e-10)
    assert list(data.sobs_list) == pytest.approx(
        [
            1.85e-07,
            -1.5e-08,
            -1.5e-08,
            2.86e-07,
            4.9e-07,
            1.6e-08,
            1.6e-08,
            5.02e-07,
            1.68e-07,
            -2.7e-08,
            -2.7e-08,
            1.81e-07,
            2.21e-07,
            2.3e-08,
            2.3e-08,
            3.36e-07,
            3.48e-07,
            -1.09e-07,
            -1.09e-07,
            3.6e-07,
            1.29e-07,
            3e-09,
            3e-09,
            8e-08,
            9.3e-08,
            -1.2e-08,
            -1.2e-08,
            1.02e-07,
            7.7e-08,
            1.6e-08,
            1.6e-08,
            7.5e-08,
            1.54e-07,
            1.2e-08,
            1.2e-08,
            1.75e-07,
            3.28e-07,
            -4.5e-08,
            -4.5e-08,
            3.99e-07,
            2.12e-07,
            1e-09,
            1e-09,
            1.57e-07,
            2.04e-07,
            -5.1e-08,
            -5.1e-08,
            1.2e-07,
            3.42e-07,
            -4.3e-08,
            -4.3e-08,
            3.06e-07,
            1.39e-07,
            -1.6e-08,
            -1.6e-08,
            1.65e-07,
            2.96e-07,
            -7e-08,
            -7e-08,
            3.71e-07,
            4.45e-07,
            -1.05e-07,
            -1.05e-07,
            2.55e-07,
            3.76e-07,
            5.5e-08,
            5.5e-08,
            1.78e-07,
            1.24e-07,
            3.4e-08,
            3.4e-08,
            9.1e-08,
            3.82e-07,
            8e-09,
            8e-09,
            2.93e-07,
            1.95e-07,
            -1e-09,
            -1e-09,
            5.5e-08,
            2.39e-07,
            7.5e-08,
            7.5e-08,
            2.28e-07,
            2.98e-07,
            4e-09,
            4e-09,
            1.47e-07,
            4.6e-07,
            -4.3e-08,
            -4.3e-08,
            3.45e-07,
            2.75e-07,
            8.7e-08,
            8.7e-08,
            3.14e-07,
        ],
        abs=1e-9,
    )
